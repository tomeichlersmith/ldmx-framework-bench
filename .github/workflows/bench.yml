
name: Benchmark

on:
  workflow_dispatch:
    inputs:
      n_events_list:
        description: 'JSON-style listing of event numbers to benchmark'
        required: false
        default: '[1,10,100,1000,10000,100000]'
      n_trials:
        descrption: 'Number of trials per event number to do for benchmark average'
        required: false
        default: 10

# workflow consists of one building and testing job
jobs:
  bench:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        n_events: ${{fromJson(github.event.inputs.n_events_list)}}
    defaults:
      run:
        shell: bash
    steps:
    - 
      name: Get Repository
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        ref: 'hdf5'
    -
      name: Bench HDF5
      run: |
        echo "::group::Build and Install"
        source rootless-env.sh
        ldmx config
        ldmx cmake -B build -S .
        ldmx cmake --build build --target install
        echo "::endgroup::"
        echo "::group::Run Benchmark"
        ldmx ./.github/workflows/bench.sh \
          hdf5 ${{github.event.inputs.n_trials}} ${{matrix.n_events}}
        rm -r output
        echo "::endgroup::"
    -
      name: Clean Repository
      run: git clean -ffdx -e data.csv
    - 
      name: Get Repository
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        ref: 'root'
        clean: false
    -
      name: Bench ROOT
      run: |
        echo "::group::Build and Install"
        source rootless-env.sh
        ldmx config
        ldmx cmake -B build -S .
        ldmx cmake --build build --target install
        echo "::endgroup::"
        echo "::group::Run Benchmark"
        ldmx ./.github/workflows/bench.sh \
          root ${{github.event.inputs.n_trials}} ${{matrix.n_events}}
        rm -r output
        echo "::endgroup::"
    -
      name: Save Benchmark Data
      uses: actions/upload-artifact@v2
      with:
        name: Benchmark-${{matrix.n_events}}-Events
        path: data.csv

  plot:
    needs: bench
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - 
      name: Get Repository
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        ref: 'hdf5'
    - 
      name: Download Benchmarking Data
      uses: actions/download-artifact@v2
      with:
        path: .
    - 
      name: Merge Benchmarking Data
      run: |
        for f in ./Benchmark-*/data.csv; do
          if [ ! -f data.csv ]; then
            # merged data not created? cat entire data file to include headers
            cat ${f} | tee data.csv
          else
            # start with 2nd line to avoid repeating headers
            tail -n +2 ${f} | tee -a data.csv 
          fi
        done
    -
      name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    -
      name: Install Plotting Requirements
      run: python -m pip install --upgrade matplotlib pandas
    -
      name: Plot
      run: |
        python .github/workflows/bench_plot.py data.csv
        mv data.csv *data.pdf *data.png Bench/results/
        git config --global user.name "Bench Bot"
        git config --global user.email ${GITHUB_ACTOR}@users.noreply.github.com
        git add Bench/results/*
        git commit -m "auto commit: updated benchmarking results"
        git push
    -
      name: Upload Results
      uses: actions/upload-artifact@v2
      with:
        name: Benchmark-Results
        path: |
          *data.pdf
          *data.png
          data.csv
