
name: Benchmark

on:
  workflow_dispatch:
    inputs:
      n_events_list:
        description: 'JSON-style listing of event numbers to benchmark'
        required: false
        default: '[1,10,100,1000]'
      n_trials:
        descrption: 'Number of trials per event number to do for benchmark average'
        required: false
        default: 10

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        branch: ['hdf5','root']
    steps:
    -
      name: Setup QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
    - 
      name: Get Build Context
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        ref: ${{matrix.branch}}
    -
      name: Build the Image
      uses: docker/build-push-action@v2
      with:
        push: false # don't push to docker hub yet
        load: true # allow image to be availabe to the docker program later in this job
        tags: ${{matrix.branch}}
        context: .
    -
      name: Package Image
      run: docker save ${{matrix.branch}} > ${{matrix.branch}}-image.tar
    - 
      name: Upload Newly Built Image
      uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.branch}}-image
        path: ${{matrix.branch}}-image.tar

  bench:
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        n_events: ${{fromJson(github.event.inputs.n_events_list)}}
    defaults:
      run:
        shell: bash
    steps:
    - 
      name: Get Repository for Scripts
      uses: actions/checkout@v2
    -
      name: Download HDF5 Build
      uses: actions/download-artifact@v2
      with:
        name: hdf5-image
    -
      name: Bench HDF5
      run: |
        echo "::group::Load Container"
        docker load --input hdf5-image.tar
        echo "::endgroup::"
        echo "::group::Run Benchmark"
        docker run \
          --rm \
          -v $(pwd):$(pwd) \
          -u $(id -u ${USER}):$(id -u ${USER}) \
          hdf5 $(pwd) \
          ./.github/workflows/bench.sh hdf5 ${{github.event.inputs.n_trials}} ${{matrix.n_events}}
        echo "::endgroup::"
    -
      name: Download ROOT Build
      uses: actions/download-artifact@v2
      with:
        name: root-image
    -
      name: Bench ROOT
      run: |
        echo "::group::Load Container"
        docker load --input root-image.tar
        echo "::endgroup::"
        echo "::group::Run Benchmark"
        docker run \
          --rm \
          -v $(pwd):$(pwd) \
          -u $(id -u ${USER}):$(id -u ${USER}) \
          root $(pwd) \
          ./.github/workflows/bench.sh root ${{github.event.inputs.n_trials}} ${{matrix.n_events}}
        echo "::endgroup::"
    -
      name: Save Benchmark Data
      uses: actions/upload-artifact@v2
      with:
        name: Benchmark-${{matrix.n_events}}-Events
        path: data.csv

  plot:
    needs: bench
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
    - 
      name: Get Repository
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'
        ref: 'hdf5'
    - 
      name: Download Benchmarking Data
      uses: actions/download-artifact@v2
      with:
        path: .
    - 
      name: Merge Benchmarking Data
      run: |
        for f in ./Benchmark-*/data.csv; do
          # merged data not created? cat entire data file to include headers
          [ ! -f data.csv ] && cat ${f} | tee data.csv
          # start with 2nd line to avoid repeating headers
          tail -n +2 ${f} | tee -a data.csv 
        done
    -
      name: Setup Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
    -
      name: Install Plotting Requirements
      run: python -m pip install --upgrade matplotlib pandas
    -
      name: Plot
      run: python .github/workflows/bench_plot.py data.csv
    -
      name: Upload Results
      uses: actions/upload-artifact@v2
      with:
        name: Benchmark-Results
        path: |
          data.pdf
          data.csv
